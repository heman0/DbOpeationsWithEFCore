// <auto-generated />
using System;
using DbOpeationsWithEFCore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DbOpeationsWithEFCore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240411095306_AddedDataToLanguageTable")]
    partial class AddedDataToLanguageTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DbOpeationsWithEFCore.Data.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LanugageId")
                        .HasColumnType("int");

                    b.Property<int>("NoOfPages")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LanugageId");

                    b.ToTable("tbl_Books");
                });

            modelBuilder.Entity("DbOpeationsWithEFCore.Data.BookPrices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CurrenciesId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CurrenciesId");

                    b.ToTable("tbl_Book_Prices");
                });

            modelBuilder.Entity("DbOpeationsWithEFCore.Data.Currencies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_Currencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "INR"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Dollar"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Euro"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Dinnar"
                        });
                });

            modelBuilder.Entity("DbOpeationsWithEFCore.Data.Languages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Indian Hindi",
                            Title = "Hindi"
                        },
                        new
                        {
                            Id = 2,
                            Description = "UK English",
                            Title = "English"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Punjab's language",
                            Title = "Punjabi"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Meerut's urdu",
                            Title = "Urdu"
                        });
                });

            modelBuilder.Entity("DbOpeationsWithEFCore.Data.Book", b =>
                {
                    b.HasOne("DbOpeationsWithEFCore.Data.Languages", "Lanugage")
                        .WithMany("Books")
                        .HasForeignKey("LanugageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lanugage");
                });

            modelBuilder.Entity("DbOpeationsWithEFCore.Data.BookPrices", b =>
                {
                    b.HasOne("DbOpeationsWithEFCore.Data.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbOpeationsWithEFCore.Data.Currencies", "Currencies")
                        .WithMany("BookPrices")
                        .HasForeignKey("CurrenciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Currencies");
                });

            modelBuilder.Entity("DbOpeationsWithEFCore.Data.Currencies", b =>
                {
                    b.Navigation("BookPrices");
                });

            modelBuilder.Entity("DbOpeationsWithEFCore.Data.Languages", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
